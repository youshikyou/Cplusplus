	/* Chapter 8 
	1.函数传递时候，函数里数组是在原始数据进行修改，所以有时侯要做 const  typename *p这种操作，但是基本类型的在函数传递时侯是在副本中进行的，不会影响主函数本身值，注意区别
	2.引用用在函数参数中是相当于把形参引用为了实际参数，所以在函数中可以修改主函数值，但是如果按值传递则只是修改副本，对主函数值没有影响
	3.book的P266，介绍了函数中两种传递结构体的方法，第一种是传递地址，第二种是引用
	4.返回引用的函数实际上是被引用的变量的别名
	5.“***”这类字符串是const char *类型（多次强调增加记忆）
	6.函数中，类型为const引用的形参，如果实参的类型与引用参数类型不匹配，但可被转换为引用类型，程序将创建一个正确类型的临时变量，使用转换后的实参值来初始化，然后传递一个指向
	该临时变量的引用。例子可见book p270.
	7.bookP274 如何使用参数中	类设计的语义常要求使用引用，数组使用指针
	8.对于带参数列表函数，必须从右向左添加默认值，也就是说，要为某个参数设置默认值，则必须为它右边的所有参数提供默认值。参看 p275
	9.函数重载关键是函数的参数列表（函数特征标），变量名无关紧要，允许定义名称相同函数，条件是特征标不同，特殊的类型引用和类型本身视为同一特征标
	10.被重载的函数，需要函数调用使用正确的参数类型，如果调用时与原型不匹配，将尝试强制转换匹配，如果由多个函数都能转换，c++拒绝这种调用。
	11. 模板 和 具体化

	模板：
	template < typename T>  这里的typename是关键字，下一行的typename是指具体函数值类型
	typename f(T argument, T argument)
	{
		xxxx;
	}

	具体化：
	template <> typename f(typename argument，typename argument)

	12. double双精度8字节，float单精度4字节，除非指明，如果有小数，默认double
	*/

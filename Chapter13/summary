构造函数成员初始化列表语法可减少一个步骤，相比于在方法里初始化，具体书P482
设置虚函数的区别,如果没有使用关键字virtual，程序根据引用类型或者指针类型选择方法，
如果使用virtual，程序将根据引用或者指针指向的对象的类型来选择方法。P493.
指向基类的引用或者指针可以引用派生类对象。
P502 按值，按引用，按指针的区别例子
通常应给基类提供一个虚析构函数，即使它并不需要析构函数，析构函数应当是虚函数。
友元不能是虚函数，因为友元函数不是类成员，只有成员才能使虚函数。
重新定义继承的方法，应确保与原来的原型完全相同，但返回的类型是基类引用或者指针，可以修改为指向派生类的引用或者指针。不适用于参数！！！
如果函数将参数声明为指向const的引用和指针，则不能将该参数传递给另一个函数，除非后者也确保了参数不会被修改。
基类的公有成员成为派生类的公有成员，基类的保护成员成为派生类的保护成员，基类的私有成员被继承，但不能直接访问。
派生类不能继承构造函数，析构函数，赋值运算符和友元。
如果派生类构造函数使用new或者new[]运算符来初始化类的指针成员，应定义一个赋值运算符。
一个函数将基类对象的引用作为参数，c++允许基类引用指向从该基类派生而来的任何类型。

